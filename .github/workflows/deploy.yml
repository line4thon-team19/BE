name: CI-CD

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }} 
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRES: ${{ secrets.JWT_EXPIRES }}
      APP_PORT: "3000"
      NODE_ENV: "production"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Install rsync
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync

      - name: Generate .env on runner
        shell: bash
        run: |
          {
            echo "APP_PORT=$APP_PORT"
            echo "NODE_ENV=$NODE_ENV"
            echo
            echo "# MySQL"
            echo "MYSQL_USER=$MYSQL_USER"
            echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD"
            echo "MYSQL_DATABASE=$MYSQL_DATABASE"
            echo
            echo "# Redis (상수)"
            echo "REDIS_HOST=redis"
            echo "REDIS_PORT=6379"
            echo
            echo "# DB URL"
            echo "DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_ROOT_PASSWORD@mysql:3306/$MYSQL_DATABASE"
            echo
            echo "# JWT"
            echo "JWT_SECRET=$JWT_SECRET"
            echo "JWT_EXPIRES=$JWT_EXPIRES"
            echo "ENABLE_SWAGGER=true"
          } > .env

      - name: Sync project files to EC2
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" \
            ./ ubuntu@$EC2_HOST:/home/ubuntu/app/

      - name: Upload .env to EC2
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
            .env ubuntu@$EC2_HOST:/home/ubuntu/app/.env
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "chmod 600 /home/ubuntu/app/.env"

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "
            set -e
            cd /home/ubuntu/app
            ls -la | sed -n '1,120p'
            [ -f docker-compose.yml ] || { echo 'docker-compose.yml 없음'; exit 1; }
            docker compose up -d --build
          "
